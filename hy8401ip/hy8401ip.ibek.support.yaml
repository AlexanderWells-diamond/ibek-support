# yaml-language-server: $schema=../../tests/samples/schemas/ibek.defs.schema.json

module: Hy8401ip

defs:
  - name: Hy8401ip
    args:
      - type: id
        name: name
        description: "Name for the module"

      - type: object
        name: carrier
        description: "Carrier Board Identifier"

      - type: int
        name: ipslot
        description: IP Site Number 0=A, 1=B, 2=C, 3=D

      - type: object
        name: vector
        description: Interrupt Vector

      - type: bool
        name: intEnable
        description: Interrupt Enable
        default: false

      - type: bool
        name: externalClock
        description: Use External Clock
        default: false

      - type: int
        name: clockRate
        description: Clock Rate
        default: 15

      - type: bool
        name: inhibit
        description: Enable front panel inhibit signal
        default: false

      - type: int
        name: sampleSize
        description: Number of samples for triggered capture
        default: 0

      - type: str
        name: cardid
        description: Card Identifier
        default: "{{ carrier.slot }}{{ ipslot }}"

    script:
      - type: function
        name: Hy8401ipConfigure
        header: |
          #   IpSlot A=0 B=1 C=2 D=3
          #   ClockRate  0=1Hz  1=2Hz  2=5Hz  3=10Hz 4=20Hz 5=50Hz 6=100Hz7=200Hz 8=500Hz 9=1kHz 10=2kHz11=5kHz 12=10kHz 13=20kHz 14=50kHz 15=100kHz
        args:
          CardId: "{{ cardid }}"
          IPACid: $({{ carrier.name }})
          IpSlot: "{{ ipslot }}"
          InterruptVector: $({{ vector.name }})
          InterruptEnable: "{{ intEnable | int }}"
          AiType: 0
          ExternalClock: "{{ externalClock | int }}"
          ClockRate: "{{ clockRate }}"
          Inhibit: "{{ inhibit | int }}"
          SampleCount: 1
          SampleSpacing: 1
          SampleSize: "{{ sampleSize }}"

    databases:
      - file: Hy8401ip.template
        define_args: |
          c={{ carrier.slot }}"
          s={{ ipslot }}"
