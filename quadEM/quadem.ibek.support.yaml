# yaml-language-server: $schema=https://github.com/epics-containers/ibek/releases/download/2.0.2/ibek.support.schema.json

module: quadEM

defs:
  - name: quadEM_TimeSeries
    description: |-
      Create a time series and FFT for each channel using ADCore
    args:
      - type: id
        name: PORT
        description: |-
          Asyn port name

      - type: object
        name: DEVICE
        description: |-
          The parent quadEM device to add TS records to

      - type: int
        name: NUM_TS
        description: |-
          Number of elements in time series
        default: 2048

      - type: int
        name: NUM_FREQ
        description: |-
          Number of elements in FFT
        default: 2048

      - type: int
        name: QUEUE
        description: |-
          Size of the queue
        default: 16

      - type: bool
        name: ARCHIVE
        description: |-
          Add template with archive tags for useful PVs
        default: true

    databases:
      - file: $(QUADEM)/db/TimeSeriesPlugins_archiving.template
        args:
          P: "{{ DEVICE.P }}"
          R: "{{ DEVICE.R }}"

    pre_init:
      - value: |
          # ADCore path for time series and FFTs
          epicsEnvSet "EPICS_DB_INCLUDE_PATH", "$(ADCORE)/db"
          # TIME SERIES
          NDTimeSeriesConfigure("{{PORT}}", {{QUEUE}}, 0, "{{NDARRAY_PORT}}", 11, 11)
          # NDTimeSeries template
          dbLoadRecords("$(ADCORE)/db/NDTimeSeries.template", "P={{P}}, R={{R}}TS:, PORT={{PORT}}, ADDR=0, TIMEOUT=1, NDARRAY_PORT={{NDARRAY_PORT}}, NDARRAY_ADDR=11, NCHANS={{NUM_TS}}, TIME_LINK={{P}}{{R}}SampleTime_RBV CP MS, ENABLED=1")
          # NDTimeSeriesN template for each channel
          # {{SERIES}}

          # FFTs
          # {{SERIES}}
          dbLoadRecords("{{template}}", "{{args}}")

          # FFT NDStats
          # {{SERIES}}
          NDStatsConfigure("{{FFTSTATSPORT}}", 16, 0, {{FFTPORT}}, 0 , 50, 0)
          NDTimeSeriesConfigure("{{FFTSTATSPORT}}_TS", 16, 0, {{FFTSTATSPORT}}, 1 , 23)
          dbLoadRecords("{{template}}", "{{args}}")
    # TODO - MISSING ARGS: FFTSTATSPORT, NDARRAY_PORT, FFTPORT, SERIES, args, template
    # WARNING - non print commands in Initialise not parsed

    post_init:
      - value: |
          # Setting correct display precision for viewing
          dbpf("{{P}}{{R}}TS:TSTimePerPoint.PREC", "5")
          dbpf("{{P}}{{R}}TS:TSTimePerPoint_RBV.PREC", "5")
          dbpf("{{P}}{{R}}TS:TSAveragingTime.PREC", "5")
          dbpf("{{P}}{{R}}TS:TSAveragingTime_RBV.PREC", "5")
          # Setting averaging time for up to 10kHz
          dbpf("{{P}}{{R}}TS:TSAveragingTime", "0.00005")
          # Defaulting to circular buffer
          dbpf("{{P}}{{R}}TS:TSAcquireMode", "1")
          # Set channel size in Time series
          dbpf("{{P}}{{R}}TS:TSNumPoints", "{{NUM_TS}}")
          # Suppress zero frequency DC in FFT by default
          dbpf("{{fftDcPv}}", "1")
  # TODO - MISSING ARGS: fftDcPv
  # WARNING - non print commands in Initialise not parsed

  - name: TetrAMM
    description: |-
      TODO:ADD DESCRIPTION
    args:
      - type: id
        name: PORT
        description: |-
          Template argument

      - type: str
        name: P
        description: |-
          Base name of PV.

      - type: str
        name: R
        description: |-
          Second macro for name of PV.

      - type: int
        name: QSIZE
        description: |-
          ..
        default: 20

      - type: int
        name: RING_SIZE
        description: |-
          ..
        default: 10000

      - type: str
        name: IP
        description: |-
          IP address of the TetrAMM device

    databases:
      - file: $(QUADEM)/db/TetrAMM.template
        args:
          P:
          R:
          PORT:

    pre_init:
      - value: |
          drvAsynIPPortConfigure({{PORT}}ip, {{IP}}, 100, 0, 0)
          asynOctetSetInputEos({{PORT}}ip, 0, "\r\n")
          asynOctetSetOutputEos({{PORT}}ip, 0, "\r")

          # drvTetrAMMConfigure(portName, IPportName, RingSize)
          drvTetrAMMConfigure("{{PORT}}", "{{PORT}}ip", {{RING_SIZE}})

    post_init:
      - value: |
          # Increase precision of sample time for TetrAMM
          dbpf("{{P}}{{R}}SampleTime_RBV.PREC", "5")
  #
  # WARNING - non print commands in Initialise not parsed
  - name: Plugins
    description: |-
      This plugin instantiates 11 stats plugins for Current, Sum, Diff and Pos
    args:
      - type: object
        name: DEVICE
        description: |-
          Reference to the parent quadEM device

      - type: id
        name: PORTPREFIX
        description: |-
          The prefix for plugin asyn port names

      - type: int
        name: STAT_NCHAN
        description: |-
          Template argument

      - type: int
        name: STAT_XSIZE
        description: |-
          Template argument

      - type: int
        name: HIST_SIZE
        description: |-
          Template argument
        default: 256

      - type: int
        name: QUEUE
        description: |-
          length of NDArray queue
        default: 16

    pre_init:
      - when: first
      - value: |
          # NDStatsConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory, priority, stackSize, maxThreads)
          # NDTimeSeriesConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxSignals)

      - value: |
          {% for tab in ["I1", "I2", "I3", "I4" , "SumX", "SumY", "SumAll", "DiffX", "DiffY", "PosX", "PosY"] -%}
          {# support the historical, inconsistent naming of PVs and asyn ports #}
          {%- set r_val_stats = "Cur%d" % loop.index if tab.startswith("I") else tab -%}
          {%- set r_val_array = "ARR%d" % loop.index if tab.startswith("I") else "ARR%s" % tab -%}

          NDStatsConfigure({{PORTPREFIX}}.STATS.{{tab}}, {{QUEUE}}, 0, {{DEVICE.PORT}}, {{loop.index0}}, 0, 0, 0, 0, 1)
          dbLoadRecords("$(ADCORE)/db/NDStats.template", "P={{DEVICE.P}},R=:{{r_val_stats}}:, PORT={{PORTPREFIX}}.STATS.{{tab}}, ADDR=0, NDARRAY_PORT={{DEVICE.PORT}}, NDARRAY_ADDR={{loop.index0}}, NCHANS={{STAT_NCHAN}}, ENABLED=1, XSIZE={{STAT_XSIZE}}, YSIZE=0, HIST_SIZE={{HIST_SIZE}}")

          NDTimeSeriesConfigure({{PORTPREFIX}}.STATS.{{tab}}_TS, {{QUEUE}}, 0, {{PORTPREFIX}}.STATS.{{tab}}, 1, 23)
          dbLoadRecords("$(ADCORE)/db/NDTimeSeries.template",  "P={{DEVICE.P}}, R=:{{r_val_stats}}:TS:, PORT={{PORTPREFIX}}.STATS.{{tab}}_TS,ADDR=1, NDARRAY_PORT={{PORTPREFIX}}.{{tab}}, NDARRAY_ADDR=0, NCHANS={{STAT_NCHAN}}, ENABLED=1")

          NDStdArraysConfigure({{PORTPREFIX}}.ARRAYS.{{tab}}, {{QUEUE}}, 0, {{DEVICE.PORT}}, {{loop.index0}}, 0, 0, 0, 0, 1)
          dbLoadRecords("$(ADCORE)/db/NDStdArrays.template", "P={{DEVICE.P}},R=:{{r_val_array}}:, PORT={{PORTPREFIX}}.ARRAYS.{{tab}},ADDR=0, NDARRAY_PORT={{DEVICE.PORT}}, NDARRAY_ADDR={{loop.index0}}, ENABLED=1, FTVL=DOUBLE, TYPE=Float64, NCHANS={{STAT_NCHAN}}, XSIZE={{STAT_XSIZE}}, YSIZE=0, HIST_SIZE={{HIST_SIZE}}, NELEMENTS={{STAT_XSIZE}}")
          {% endfor %}

  - name: arrayPlugins
    description: |-
      This plugin instantiates 11 array plugins for Current, Sum, Diff and Pos
    args:
      - type: id
        name: PORTPREFIX
        description: |-
          Prefix used for asyn port names of each plugin

      - type: str
        name: P
        description: |-
          PV prefix

      - type: object
        name: NDARRAY_PORT
        description: |-
          Input NDArrayPort for plugins

      - type: int
        name: TIMEOUT
        description: |-
          Timeout
        default: 1

      - type: int
        name: ADDR
        description: |-
          Asyn Port address
        default: 0

      - type: int
        name: NDARRAY_ADDR
        description: |-
          Input Array Address
        default: 0

      - type: int
        name: ENABLED
        description: |-
          Plugin Enabled at startup?
        default: 0

      - type: enum
        name: SCANRATE
        description: |-
          Specified scan rate for cpu intensive PVs
        default: I/O Intr
        values:
          .1 second:
          1 second:
          10 second:
          5 second:
          Passive:
          2 second:
          .2 second:
          .5 second:
          Event:
          I/O Intr:

    databases:
      - file: $(ADCORE)/db/NDStdArrays.template
        args:
          NDARRAY_PORT:
          FTVL: DOUBLE
          ADDR:
          SCANRATE:
          NELEMENTS: "10000"
          NDARRAY_ADDR:
          ENABLED:
          P:
          R: ":ARR2:"
          TIMEOUT:
          TYPE: Float64
          PORT: "PORTPREFIX.I2"

  - name: AH401B
    description: |-
      Create a AH401B quadEM detectorS
    args:
      - type: str
        name: P
        description: |-
          Device Prefix

      - type: str
        name: R
        description: |-
          Device Suffix

      - type: str
        name: IPPORTNAME
        description: |-
          The name of the asyn communication IP port to the AH401B

      - type: int
        name: RINGBUFFERSIZE
        description: |-
          The number of samples to hold in the input ring buffer
        default: 10000

      - type: id
        name: PORT
        description: |-
          Asyn Port name

    databases:
      - file: $(QUADEM)/db/AH401B.template
        args:
          P:
          R:
          PORT:

      - file: $(QUADEM)/db/quadEM_GUI.template
        args:
          P:
          R:
          PORT:

    pre_init:
      - value: |
          # drvAHxxxConfigure(QEPortName, IPPortName, RingBufferSize)
          drvAHxxxConfigure("{{PORT}}", {{IPPORTNAME}}, {{RINGBUFFERSIZE}})

  - name: AH501
    description: |-
      Create a AH501 quadEM detector
    args:
      - type: str
        name: P
        description: |-
          Device Prefix

      - type: str
        name: R
        description: |-
          Device Suffix

      - type: str
        name: IPPORTNAME
        description: |-
          The name of the asyn communication IP port to the AH501

      - type: int
        name: RINGBUFFERSIZE
        description: |-
          The number of samples to hold in the input ring buffer
        default: 10000

      - type: id
        name: PORT
        description: |-
          Asyn Port name

    databases:
      - file: $(QUADEM)/db/AH501.template
        args:
          P:
          R:
          PORT:

      - file: $(QUADEM)/db/quadEM_GUI.template
        args:
          P:
          R:
          PORT:

    pre_init:
      - value: |
          # drvAHxxxConfigure(QEPortName, IPPortName, RingBufferSize)
          drvAHxxxConfigure("{{PORT}}", {{IPPORTNAME}}, {{RINGBUFFERSIZE}})
